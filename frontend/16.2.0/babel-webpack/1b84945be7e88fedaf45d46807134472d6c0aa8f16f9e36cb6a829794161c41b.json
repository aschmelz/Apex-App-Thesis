{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/checkbox\";\nimport * as i5 from \"@angular/material/table\";\nfunction ProductsComponent_tr_11_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \" No. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductsComponent_tr_11_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", product_r5.name, \" \");\n  }\n}\nfunction ProductsComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, ProductsComponent_tr_11_th_1_Template, 2, 0, \"th\", 8);\n    i0.ɵɵtemplate(2, ProductsComponent_tr_11_td_2_Template, 2, 1, \"td\", 9);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ProductsComponent {\n  constructor(http) {\n    this.http = http;\n    // To connect to express\n    this.apiUrl = 'http://localhost:3000/';\n    // Store data from database in variable apiResponse\n    this.apiResponse = \"\";\n  }\n  // Load Products from MongoDB on page load\n  ngOnInit() {\n    this.http.get(this.apiUrl).subscribe(data => {\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n  // Filter object items from search input\n  filterItems(product) {\n    const filterObj = {\n      name: product\n    };\n    this.http.get(this.apiUrl + 'searchTerm?filter=' + JSON.stringify(filterObj)).subscribe(data => {\n      console.log(JSON.stringify(filterObj));\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n  // Function to Delete a product\n  deleteProduct(product) {\n    this.http.delete(this.apiUrl + product).subscribe(result => {\n      //console.log(result);\n      this.ngOnInit(); // call ngOnInit() to show deletion w/o reloading page\n      // ************************ QUESTION: how to use new Promise in general ************************\n    });\n  }\n\n  editProduct(productId) {\n    // Receive name/price changes from user through a window prompt\n    let newName = prompt(\"Enter value for NAME:\");\n    let newPrice = prompt(\"Enter value for PRICE:\");\n    // Valdiation for input to edit name/price\n    while (!newName) {\n      newName = prompt(\"Enter value for NAME:\");\n    }\n    while (!newPrice) {\n      newPrice = prompt(\"Enter value for PRICE:\");\n    }\n    // the obj inside put() is to change the name/price of the object in mongo, to the new one from the user's input\n    this.http.put(this.apiUrl + productId, {\n      name: newName,\n      price: newPrice\n    }).subscribe(() => {\n      //console.log(this.apiUrl + product, product);\n      this.ngOnInit(); // call ngOnInit() to show deletion w/o reloading page\n    });\n  }\n}\n_class = ProductsComponent;\n_class.ɵfac = function ProductsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-products\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"form-inline\"], [\"type\", \"text\", \"placeholder\", \"Search Item\"], [\"searchTerm\", \"\"], [\"type\", \"button\", 1, \"searchBtn\", 3, \"click\"], [1, \"example\", 3, \"click\"], [\"matColumnDef\", \"position\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]],\n  template: function ProductsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Our Products\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵelement(4, \"input\", 2, 3);\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ProductsComponent_Template_button_click_6_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.filterItems(_r0.value));\n      });\n      i0.ɵɵtext(7, \"Search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"mat-checkbox\", 5);\n      i0.ɵɵlistener(\"click\", function ProductsComponent_Template_mat_checkbox_click_8_listener() {\n        return ctx.filterItems(\"A\");\n      });\n      i0.ɵɵtext(9, \"A\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementContainerStart(10, 6);\n      i0.ɵɵtemplate(11, ProductsComponent_tr_11_Template, 3, 0, \"tr\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.apiResponse);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.MatCheckbox, i5.MatHeaderCellDef, i5.MatColumnDef, i5.MatCellDef, i5.MatHeaderCell, i5.MatCell],\n  styles: [\"table[_ngcontent-%COMP%] {\\n    border: 1px solid black;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n    border: 1px solid blue;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG59XHJcblxyXG5kaXYge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmx1ZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","product_r5","name","ɵɵtemplate","ProductsComponent_tr_11_th_1_Template","ProductsComponent_tr_11_td_2_Template","ProductsComponent","constructor","http","apiUrl","apiResponse","ngOnInit","get","subscribe","data","filterItems","product","filterObj","JSON","stringify","console","log","deleteProduct","delete","result","editProduct","productId","newName","prompt","newPrice","put","price","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","ProductsComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ProductsComponent_Template_button_click_6_listener","ɵɵrestoreView","_r6","_r0","ɵɵreference","ɵɵresetView","value","ProductsComponent_Template_mat_checkbox_click_8_listener","ɵɵelementContainerStart","ProductsComponent_tr_11_Template","ɵɵelementContainerEnd","ɵɵproperty"],"sources":["C:\\node\\apex\\apex-app\\src\\app\\products\\products.component.ts","C:\\node\\apex\\apex-app\\src\\app\\products\\products.component.html"],"sourcesContent":["import { OnInit, Component } from '@angular/core';                                      // Must import OnInit to have before page load\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\n\nexport class ProductsComponent implements OnInit {                                      // Need to have \"implements OnInit\" to load before page load\n  // To connect to express\n  private apiUrl = 'http://localhost:3000/';\n  constructor(private http: HttpClient) {}\n\n  // Store data from database in variable apiResponse\n  apiResponse: any = \"\";\n\n  // Load Products from MongoDB on page load\n  ngOnInit() {\n    this.http.get(this.apiUrl).subscribe((data:any) => {\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n  \n  // Filter object items from search input\n  filterItems(product: string) {\n    const filterObj = {\n      name: product\n    }\n\n    this.http.get(this.apiUrl + 'searchTerm?filter=' + JSON.stringify(filterObj)).subscribe((data: any) => {\n      console.log(JSON.stringify(filterObj));\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n\n  // Function to Delete a product\n  deleteProduct(product: any) {\n    this.http.delete(this.apiUrl + product).subscribe(result => {\n      //console.log(result);\n      this.ngOnInit();                                // call ngOnInit() to show deletion w/o reloading page\n      \n      // ************************ QUESTION: how to use new Promise in general ************************\n    });\n  }\n\n  editProduct(productId: string) {\n    // Receive name/price changes from user through a window prompt\n    let newName = prompt(\"Enter value for NAME:\");\n    let newPrice = prompt(\"Enter value for PRICE:\");\n\n    // Valdiation for input to edit name/price\n    while (!newName) {\n      newName = prompt(\"Enter value for NAME:\");\n    }\n    while (!newPrice) {\n      newPrice = prompt(\"Enter value for PRICE:\");\n    }\n    \n    // the obj inside put() is to change the name/price of the object in mongo, to the new one from the user's input\n    this.http.put(this.apiUrl + productId, { name: newName, price: newPrice }).subscribe(() => {\n      //console.log(this.apiUrl + product, product);\n      this.ngOnInit();  // call ngOnInit() to show deletion w/o reloading page\n    })\n  }\n\n}","<div class=\"container\">\n    <h2>Our Products</h2>\n\n   <!-- <form [formGroup]=\"productForm\" class=\"form-inline\"> -->\n    <form class=\"form-inline\">\n        <input #searchTerm type=\"text\" placeholder=\"Search Item\">\n        <button (click)=\"filterItems(searchTerm.value)\" type=\"button\" class=\"searchBtn\">Search</button>\n    </form>\n\n    <mat-checkbox (click)=\"filterItems('A')\" class=\"example\">A</mat-checkbox>\n<!--\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Price</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let product of apiResponse\">\n                <td>{{ product.name }}</td>\n                <td>{{ product.price | currency: 'USD' }}</td>\n                <td>\n                    <button (click)=\"editProduct(product._id)\" type=\"button\">Edit</button>\n                    <button (click)=\"deleteProduct(product._id)\" type=\"button\">Delete</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n-->\n    <ng-container matColumnDef=\"position\">\n        <tr *ngFor=\"let product of apiResponse\">\n            <th mat-header-cell *matHeaderCellDef> No. </th>\n            <td mat-cell *matCellDef=\"let product\"> {{ product.name }} </td>\n        </tr>\n    </ng-container>\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}