{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/button\";\nexport class RegisterComponent {\n  constructor(http) {\n    this.http = http;\n    // ngModel variables\n    this.email = \"\";\n    this.password = \"\";\n    this.apiUrl = 'http://localhost:3000/users/register';\n  }\n  userRegister() {\n    if (this.password == \"\") {\n      alert(\"Please input a password!\");\n    }\n    this.http.post(this.apiUrl, {\n      email: this.email,\n      password: this.password\n    }).subscribe(data => {\n      alert(\"Account Created! Email: \" + this.email + \" | Password: \" + this.password);\n    });\n  }\n}\n_class = RegisterComponent;\n_class.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-register\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"container\"], [\"src\", \"../../images/key.png\", \"width\", \"72\", \"height\", \"72\", 1, \"loginPic\"], [1, \"form-inline\"], [1, \"name-width\"], [\"name\", \"email\", \"placeholder\", \"Input Username\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"price-width\"], [\"name\", \"password\", \"placeholder\", \"Input Password\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"registerBtn\", 3, \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2)(3, \"mat-form-field\", 3)(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"mat-form-field\", 5)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_11_listener() {\n        return ctx.userRegister();\n      });\n      i0.ɵɵtext(12, \"Register\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i3.MatInput, i4.MatFormField, i4.MatLabel, i5.MatButton],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["RegisterComponent","constructor","http","email","password","apiUrl","userRegister","alert","post","subscribe","data","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_input_ngModelChange_6_listener","$event","RegisterComponent_Template_input_ngModelChange_10_listener","RegisterComponent_Template_button_click_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\node\\apex\\apex-app\\src\\app\\register\\register.component.ts","C:\\node\\apex\\apex-app\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  // ngModel variables\n  email: string = \"\";\n  password: string = \"\";\n  private apiUrl = 'http://localhost:3000/users/register';\n  constructor(private http: HttpClient) {}\n\n  userRegister() {\n\n    if (this.password == \"\") {\n      alert(\"Please input a password!\");\n    }\n\n    this.http.post(this.apiUrl, { email: this.email, password: this.password }).subscribe((data: any) =>{\n      alert(\"Account Created! Email: \" + this.email + \" | Password: \" + this.password);\n    })\n  }\n\n}\n","<div class=\"container\">\n    <img class=\"loginPic\" src=\"../../images/key.png\" width=\"72\" height=\"72\">\n    <form class=\"form-inline\">\n        <!-- ***************************************\n                        Email Input \n        *************************************** -->\n        <mat-form-field class=\"name-width\">\n            <mat-label>Username</mat-label>\n            <input name=\"email\" placeholder=\"Input Username\" matInput [(ngModel)]=\"email\">\n        </mat-form-field>\n\n        <!-- ***************************************\n                        Password Input\n        *************************************** -->\n        <mat-form-field class=\"price-width\">\n            <mat-label>Password</mat-label>\n            <input name=\"password\" placeholder=\"Input Password\" matInput [(ngModel)]=\"password\">\n        </mat-form-field>\n        <button class=\"registerBtn\" type=\"button\" (click)=\"userRegister()\" mat-raised-button color=\"primary\">Register</button>\n    </form>\n</div>"],"mappings":";;;;;;;AASA,OAAM,MAAOA,iBAAiB;EAK5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB;IACA,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACb,KAAAC,MAAM,GAAG,sCAAsC;EAChB;EAEvCC,YAAYA,CAAA;IAEV,IAAI,IAAI,CAACF,QAAQ,IAAI,EAAE,EAAE;MACvBG,KAAK,CAAC,0BAA0B,CAAC;;IAGnC,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,MAAM,EAAE;MAAEF,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;MAClGH,KAAK,CAAC,0BAA0B,GAAG,IAAI,CAACJ,KAAK,GAAG,eAAe,GAAG,IAAI,CAACC,QAAQ,CAAC;IAClF,CAAC,CAAC;EACJ;;SAhBWJ,iBAAiB;;mBAAjBA,MAAiB,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;QAAjBd,MAAiB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT9BV,EAAA,CAAAY,cAAA,aAAuB;MACnBZ,EAAA,CAAAa,SAAA,aAAwE;MACxEb,EAAA,CAAAY,cAAA,cAA0B;MAKPZ,EAAA,CAAAc,MAAA,eAAQ;MAAAd,EAAA,CAAAe,YAAA,EAAY;MAC/Bf,EAAA,CAAAY,cAAA,eAA8E;MAApBZ,EAAA,CAAAgB,UAAA,2BAAAC,0DAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAnB,KAAA,GAAA0B,MAAA;MAAA,EAAmB;MAA7ElB,EAAA,CAAAe,YAAA,EAA8E;MAMlFf,EAAA,CAAAY,cAAA,wBAAoC;MACrBZ,EAAA,CAAAc,MAAA,eAAQ;MAAAd,EAAA,CAAAe,YAAA,EAAY;MAC/Bf,EAAA,CAAAY,cAAA,gBAAoF;MAAvBZ,EAAA,CAAAgB,UAAA,2BAAAG,2DAAAD,MAAA;QAAA,OAAAP,GAAA,CAAAlB,QAAA,GAAAyB,MAAA;MAAA,EAAsB;MAAnFlB,EAAA,CAAAe,YAAA,EAAoF;MAExFf,EAAA,CAAAY,cAAA,iBAAqG;MAA3DZ,EAAA,CAAAgB,UAAA,mBAAAI,oDAAA;QAAA,OAAST,GAAA,CAAAhB,YAAA,EAAc;MAAA,EAAC;MAAmCK,EAAA,CAAAc,MAAA,gBAAQ;MAAAd,EAAA,CAAAe,YAAA,EAAS;;;MAVxDf,EAAA,CAAAqB,SAAA,GAAmB;MAAnBrB,EAAA,CAAAsB,UAAA,YAAAX,GAAA,CAAAnB,KAAA,CAAmB;MAQhBQ,EAAA,CAAAqB,SAAA,GAAsB;MAAtBrB,EAAA,CAAAsB,UAAA,YAAAX,GAAA,CAAAlB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}