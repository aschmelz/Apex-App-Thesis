{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/checkbox\";\nfunction ProductsComponent_div_10_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ProductsComponent_div_10_tr_9_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const product_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.editProduct(product_r3._id));\n    });\n    i0.ɵɵtext(8, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ProductsComponent_div_10_tr_9_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const product_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.deleteProduct(product_r3._id));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 2, product_r3.price, \"USD\"));\n  }\n}\nfunction ProductsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 7)(2, \"thead\")(3, \"tr\")(4, \"th\", 8);\n    i0.ɵɵtext(5, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\", 8);\n    i0.ɵɵtext(7, \"Price\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"tbody\");\n    i0.ɵɵtemplate(9, ProductsComponent_div_10_tr_9_Template, 11, 5, \"tr\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.apiResponse);\n  }\n}\nexport class ProductsComponent {\n  constructor(http) {\n    this.http = http;\n    // To connect to express\n    this.apiUrl = 'http://localhost:3000/';\n    // Store data from database in variable apiResponse\n    this.apiResponse = \"\";\n    this.filterVisible = false;\n  }\n  // Load Products from MongoDB on page load\n  ngOnInit() {\n    this.http.get(this.apiUrl).subscribe(data => {\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n  // Filter object items from search input\n  filterItems(product) {\n    const filterObj = {\n      name: product\n    };\n    this.http.get(this.apiUrl + 'searchTerm?filter=' + JSON.stringify(filterObj)).subscribe(data => {\n      console.log(JSON.stringify(filterObj));\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n  // Function to Delete a product\n  deleteProduct(product) {\n    this.http.delete(this.apiUrl + product).subscribe(result => {\n      //console.log(result);\n      this.ngOnInit(); // call ngOnInit() to show deletion w/o reloading page\n      // ************************ QUESTION: how to use new Promise in general ************************\n    });\n  }\n\n  editProduct(productId) {\n    // Receive name/price changes from user through a window prompt\n    let newName = prompt(\"Enter value for NAME:\");\n    let newPrice = prompt(\"Enter value for PRICE:\");\n    // Valdiation for input to edit name/price\n    while (!newName) {\n      newName = prompt(\"Enter value for NAME:\");\n    }\n    while (!newPrice) {\n      newPrice = prompt(\"Enter value for PRICE:\");\n    }\n    // the obj inside put() is to change the name/price of the object in mongo, to the new one from the user's input\n    this.http.put(this.apiUrl + productId, {\n      name: newName,\n      price: newPrice\n    }).subscribe(() => {\n      //console.log(this.apiUrl + product, product);\n      this.ngOnInit(); // call ngOnInit() to show deletion w/o reloading page\n    });\n  }\n}\n_class = ProductsComponent;\n_class.ɵfac = function ProductsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-products\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"form-inline\"], [\"type\", \"text\", \"placeholder\", \"Search Item\"], [\"searchTerm\", \"\"], [\"type\", \"button\", 1, \"searchBtn\", 3, \"click\"], [1, \"example\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"]],\n  template: function ProductsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Our Products\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵelement(4, \"input\", 2, 3);\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ProductsComponent_Template_button_click_6_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.filterItems(_r0.value));\n      });\n      i0.ɵɵtext(7, \"Search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"mat-checkbox\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductsComponent_Template_mat_checkbox_ngModelChange_8_listener($event) {\n        return ctx.filterVisible = $event;\n      });\n      i0.ɵɵtext(9, \"A\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, ProductsComponent_div_10_Template, 10, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.filterVisible);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.filterVisible);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.MatCheckbox, i2.CurrencyPipe],\n  styles: [\"table[_ngcontent-%COMP%] {\\n    border: 1px solid black;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n    border: 1px solid blue;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG59XHJcblxyXG5kaXYge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmx1ZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProductsComponent_div_10_tr_9_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r5","product_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","editProduct","_id","ProductsComponent_div_10_tr_9_Template_button_click_9_listener","ctx_r6","deleteProduct","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵpipeBind2","price","ɵɵtemplate","ProductsComponent_div_10_tr_9_Template","ɵɵproperty","ctx_r1","apiResponse","ProductsComponent","constructor","http","apiUrl","filterVisible","ngOnInit","get","subscribe","data","filterItems","product","filterObj","JSON","stringify","console","log","delete","result","productId","newName","prompt","newPrice","put","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","ProductsComponent_Template","rf","ctx","ɵɵelement","ProductsComponent_Template_button_click_6_listener","_r7","_r0","ɵɵreference","value","ProductsComponent_Template_mat_checkbox_ngModelChange_8_listener","$event","ProductsComponent_div_10_Template"],"sources":["C:\\node\\apex\\apex-app\\src\\app\\products\\products.component.ts","C:\\node\\apex\\apex-app\\src\\app\\products\\products.component.html"],"sourcesContent":["import { OnInit, Component } from '@angular/core';                                      // Must import OnInit to have before page load\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\n\nexport class ProductsComponent implements OnInit {                                      // Need to have \"implements OnInit\" to load before page load\n  // To connect to express\n  private apiUrl = 'http://localhost:3000/';\n  constructor(private http: HttpClient) {}\n\n  // Store data from database in variable apiResponse\n  apiResponse: any = \"\";\n\n  // Load Products from MongoDB on page load\n  ngOnInit() {\n    this.http.get(this.apiUrl).subscribe((data:any) => {\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n  \n  // Filter object items from search input\n  filterItems(product: string) {\n    const filterObj = {\n      name: product\n    }\n\n    this.http.get(this.apiUrl + 'searchTerm?filter=' + JSON.stringify(filterObj)).subscribe((data: any) => {\n      console.log(JSON.stringify(filterObj));\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n\n  filterVisible = false;\n\n  // Function to Delete a product\n  deleteProduct(product: any) {\n    this.http.delete(this.apiUrl + product).subscribe(result => {\n      //console.log(result);\n      this.ngOnInit();                                // call ngOnInit() to show deletion w/o reloading page\n      \n      // ************************ QUESTION: how to use new Promise in general ************************\n    });\n  }\n\n  editProduct(productId: string) {\n    // Receive name/price changes from user through a window prompt\n    let newName = prompt(\"Enter value for NAME:\");\n    let newPrice = prompt(\"Enter value for PRICE:\");\n\n    // Valdiation for input to edit name/price\n    while (!newName) {\n      newName = prompt(\"Enter value for NAME:\");\n    }\n    while (!newPrice) {\n      newPrice = prompt(\"Enter value for PRICE:\");\n    }\n    \n    // the obj inside put() is to change the name/price of the object in mongo, to the new one from the user's input\n    this.http.put(this.apiUrl + productId, { name: newName, price: newPrice }).subscribe(() => {\n      //console.log(this.apiUrl + product, product);\n      this.ngOnInit();  // call ngOnInit() to show deletion w/o reloading page\n    })\n  }\n\n}","<div class=\"container\">\n    <h2>Our Products</h2>\n\n   <!-- <form [formGroup]=\"productForm\" class=\"form-inline\"> -->\n    <form class=\"form-inline\">\n        <input #searchTerm type=\"text\" placeholder=\"Search Item\">\n        <button (click)=\"filterItems(searchTerm.value)\" type=\"button\" class=\"searchBtn\">Search</button>\n    </form>\n\n    <!--\n    <mat-checkbox (click)=\"filterItems('A')\" class=\"example\">A</mat-checkbox>\n    -->\n    <mat-checkbox [(ngModel)]=\"filterVisible\" class=\"example\">A</mat-checkbox>\n\n    <div *ngIf=\"filterVisible\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Price</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let product of apiResponse\">\n                    <td>{{ product.name }}</td>\n                    <td>{{ product.price | currency: 'USD' }}</td>\n                    <td>\n                        <button (click)=\"editProduct(product._id)\" type=\"button\">Edit</button>\n                        <button (click)=\"deleteProduct(product._id)\" type=\"button\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}