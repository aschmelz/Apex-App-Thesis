{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/divider\";\nimport * as i7 from \"@angular/material/button\";\nfunction ProductsComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ProductsComponent_tr_20_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editProduct(product_r2._id));\n    });\n    i0.ɵɵtext(8, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ProductsComponent_tr_20_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteProduct(product_r2._id));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 2, product_r2.price, \"USD\"));\n  }\n}\nexport class ProductsComponent {\n  constructor(http) {\n    this.http = http;\n    // To connect to express\n    this.apiUrl = 'http://localhost:3000/';\n    this.apiResponse = \"\"; // Store data from database in variable apiResponse\n    this.displayedColumns = [\"Name\", \"Price\", \"Brand\", \"Edit/Delete\"]; // Array for the names of the table columns\n  }\n  // Load Products from MongoDB on page load\n  ngOnInit() {\n    this.http.get(this.apiUrl).subscribe(data => {\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n  filterItems(product) {\n    const filterObj = {\n      name: product\n    };\n    this.http.get(this.apiUrl + 'searchTerm?filter=' + JSON.stringify(filterObj)).subscribe(data => {\n      console.log(JSON.stringify(filterObj));\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n  deleteProduct(product) {\n    this.http.delete(this.apiUrl + product).subscribe(result => {\n      //console.log(result);\n      this.ngOnInit(); // call ngOnInit() to show deletion w/o reloading page\n    });\n  }\n\n  editProduct(productId) {\n    let newName = prompt(\"Enter value for NAME:\"); // Receive name/price changes from user through a window prompt\n    let newPrice = prompt(\"Enter value for PRICE:\");\n    while (!newName) {\n      // Valdiation for input to edit name/price\n      newName = prompt(\"Enter value for NAME:\");\n    }\n    while (!newPrice) {\n      newPrice = prompt(\"Enter value for PRICE:\");\n    }\n    // the obj inside put() is to change the name/price of the object in mongo, to the new one from the user's input\n    this.http.put(this.apiUrl + productId, {\n      name: newName,\n      price: newPrice\n    }).subscribe(() => {\n      //console.log(this.apiUrl + product, product);\n      this.ngOnInit(); // call ngOnInit() to show deletion w/o reloading page\n    });\n  }\n}\n_class = ProductsComponent;\n_class.ɵfac = function ProductsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-products\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"form-inline\"], [1, \"search-width\"], [\"matInput\", \"\", \"placeholder\", \"Search Product\", 1, \"search\"], [\"searchTerm\", \"\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"searchBtn\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"ng-container\", \"\"], [\"type\", \"button\", 3, \"click\"]],\n  template: function ProductsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Our Products\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"mat-form-field\", 2)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Search Here\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ProductsComponent_Template_button_click_9_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.filterItems(_r0.value));\n      });\n      i0.ɵɵtext(10, \"Search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"mat-divider\");\n      i0.ɵɵelementStart(12, \"table\")(13, \"thead\")(14, \"tr\")(15, \"th\");\n      i0.ɵɵtext(16, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Price\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, ProductsComponent_tr_20_Template, 11, 5, \"tr\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.apiResponse);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.MatInput, i5.MatFormField, i5.MatLabel, i6.MatDivider, i7.MatButton, i2.CurrencyPipe],\n  styles: [\"table[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n\\n.search-width[_ngcontent-%COMP%] {\\n    width: 25%;\\n    margin-right: 0.5%;\\n    min-height: 10px;\\n    max-height: 75px;\\n  }\\n\\n.editBtn[_ngcontent-%COMP%] {\\n  margin-right: 0.5%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7RUFDYjs7QUFFRjtJQUNJLFVBQVU7SUFDVixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtFQUNsQjs7QUFFRjtFQUNFLGtCQUFrQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuXHJcbi5zZWFyY2gtd2lkdGgge1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICAgIG1hcmdpbi1yaWdodDogMC41JTtcclxuICAgIG1pbi1oZWlnaHQ6IDEwcHg7XHJcbiAgICBtYXgtaGVpZ2h0OiA3NXB4O1xyXG4gIH1cclxuXHJcbi5lZGl0QnRuIHtcclxuICBtYXJnaW4tcmlnaHQ6IDAuNSU7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProductsComponent_tr_20_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r4","product_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editProduct","_id","ProductsComponent_tr_20_Template_button_click_9_listener","ctx_r5","deleteProduct","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵpipeBind2","price","ProductsComponent","constructor","http","apiUrl","apiResponse","displayedColumns","ngOnInit","get","subscribe","data","filterItems","product","filterObj","JSON","stringify","console","log","delete","result","productId","newName","prompt","newPrice","put","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","ProductsComponent_Template","rf","ctx","ɵɵelement","ProductsComponent_Template_button_click_9_listener","_r6","_r0","ɵɵreference","value","ɵɵtemplate","ProductsComponent_tr_20_Template","ɵɵproperty"],"sources":["C:\\node\\apex\\apex-app\\src\\app\\products\\products.component.ts","C:\\node\\apex\\apex-app\\src\\app\\products\\products.component.html"],"sourcesContent":["import { OnInit, Component } from '@angular/core';    // Must import OnInit to have before page load\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\n\nexport class ProductsComponent implements OnInit {    // Need to have \"implements OnInit\" to load before page load\n  // To connect to express\n  private apiUrl = 'http://localhost:3000/';\n  constructor(private http: HttpClient) {}\n\n  apiResponse: any = \"\";                              // Store data from database in variable apiResponse\n  displayedColumns = [\"Name\", \"Price\", \"Brand\", \"Edit/Delete\"];               // Array for the names of the table columns\n\n  // Load Products from MongoDB on page load\n  ngOnInit() {\n    this.http.get(this.apiUrl).subscribe((data:any) => {\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n\n  filterItems(product: string) {                      // Filter object items from search input\n    const filterObj = {\n      name: product\n    }\n\n    this.http.get(this.apiUrl + 'searchTerm?filter=' + JSON.stringify(filterObj)).subscribe((data: any) => {\n      console.log(JSON.stringify(filterObj));\n      //console.log(data);\n      this.apiResponse = data;\n    });\n  }\n\n  deleteProduct(product: any) {                       // Function to Delete a product\n    this.http.delete(this.apiUrl + product).subscribe(result => {\n      //console.log(result);\n      this.ngOnInit();                                // call ngOnInit() to show deletion w/o reloading page\n    });\n  }\n\n  editProduct(productId: string) {                    // Function to edit a product's details\n    let newName = prompt(\"Enter value for NAME:\");    // Receive name/price changes from user through a window prompt\n    let newPrice = prompt(\"Enter value for PRICE:\");\n\n    while (!newName) {                                // Valdiation for input to edit name/price\n      newName = prompt(\"Enter value for NAME:\");\n    }\n    while (!newPrice) {\n      newPrice = prompt(\"Enter value for PRICE:\");\n    }\n    \n    // the obj inside put() is to change the name/price of the object in mongo, to the new one from the user's input\n    this.http.put(this.apiUrl + productId, { name: newName, price: newPrice }).subscribe(() => {\n      //console.log(this.apiUrl + product, product);\n      this.ngOnInit();                                // call ngOnInit() to show deletion w/o reloading page\n    })\n  }\n\n}","<div class=\"container\">\n    <h2>Our Products</h2>\n\n    <form class=\"form-inline\">\n        <mat-form-field class=\"search-width\">\n          <mat-label>Search Here</mat-label>\n          <input class=\"search\" #searchTerm matInput placeholder=\"Search Product\">\n        </mat-form-field>\n        <button (click)=\"filterItems(searchTerm.value)\" type=\"button\" class=\"searchBtn\" mat-raised-button color=\"primary\">Search</button>\n    </form>\n    <mat-divider></mat-divider>\n<!--\n    <form class=\"form-inline\">\n        <input #searchTerm type=\"text\" placeholder=\"Search Item\">\n        <button (click)=\"filterItems(searchTerm.value)\" type=\"button\" class=\"searchBtn\">Search</button>\n    </form>\n-->\n\n    \n\n    <table>\n        <thead>\n            <tr>\n                <th >Name</th>\n                <th >Price</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let product of apiResponse\" >\n                <td ng-container>{{ product.name }}</td>\n                <td ng-container>{{ product.price | currency: 'USD' }}</td>\n                <td>\n                    <button (click)=\"editProduct(product._id)\" type=\"button\">Edit</button>\n                    <button (click)=\"deleteProduct(product._id)\" type=\"button\">Delete</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n<!--\n    <table mat-table [dataSource]=\"apiResponse\">\n        <thead>\n            <tr>\n                <th mat-header-cell *matHeaderCellDef>Name</th>\n                <th mat-header-cell *matHeaderCellDef>Price</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let product of apiResponse\">\n                <td mat-cell *matColumnDef=\"'name'\">\n                    {{ product.name }}\n                </td>\n                <td mat-cell *matColumnDef=\"'price'\">\n                    {{ product.price | currency: 'USD' }}\n                </td>\n                <td>\n                    <button (click)=\"editProduct(product._id)\" type=\"button\">Edit</button>\n                    <button (click)=\"deleteProduct(product._id)\" type=\"button\">Delete</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n-->\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}